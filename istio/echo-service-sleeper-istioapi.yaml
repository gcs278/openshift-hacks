apiVersion: v1
kind: List
metadata: {}
items:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: echo-sleeper
    namespace: istioapi
  spec:
    replicas: 1
    selector:
      app: echo-sleeper
      deploymentconfig: echo-sleeper
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: echo-sleeper
          deploymentconfig: echo-sleeper
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
          name: echo-sleeper
          command:
            - /usr/bin/socat
            - TCP4-LISTEN:8676,reuseaddr,fork
            - EXEC:'/bin/bash -c \"sleep 5; printf \\\"HTTP/1.0 200 OK\r\n\r\n\\\"; sed -e \\\"/^\r/q\\\"\"'
          ports:
          - containerPort: 8676
            protocol: TCP
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: echo-sleeper
    namespace: istioapi
    labels:
      app: echo-sleeper
  spec:
    selector:
      app: echo-sleeper
    ports:
      - port: 8676
        name: echo-sleeper
        protocol: TCP
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: sleeper-gateway
  namespace: istioapi
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "sleeper.${ISTIO_DOMAIN}"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: sleeper
  namespace: istioapi
spec:
  hosts:
  - "sleeper.${ISTIO_DOMAIN}"
  gateways:
  - sleeper-gateway
  http:
  - route:
    - destination:
        port:
          number: 8676
        host: echo-sleeper.istioapi.svc.cluster.local
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: sleeper
  namespace: istioapi
spec:
  host: echo-sleeper
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 1024
