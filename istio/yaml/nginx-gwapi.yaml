# Copyright Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# httpbin service
##################################################################################################
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: istio-cni
  namespace: gwapi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: httpbin
  namespace: gwapi
---
apiVersion: v1
kind: Service
metadata:
  namespace: gwapi
  name: nginx
  labels:
    app: nginx
    service: nginx
spec:
  ports:
  - name: http
    port: 8000
    targetPort: 80
  selector:
    app: nginx
---
apiVersion: v1
kind: Service
metadata:
  namespace: gwapi
  name: nginx-reencrypt
  labels:
    app: nginx-ssl
    service: nginx-reencrypt
spec:
  ports:
  - name: https
    port: 8443
    targetPort: 443
    appProtocol: https
  selector:
    app: nginx-ssl
---
apiVersion: v1
kind: Service
metadata:
  namespace: gwapi
  name: nginx-pass
  labels:
    app: nginx-ssl
    service: nginx-pass
spec:
  ports:
  - name: https
    port: 8443
    targetPort: 443
  selector:
    app: nginx-ssl
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: gwapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      version: v1
  template:
    metadata:
      labels:
        app: nginx
        version: v1
    spec:
      serviceAccountName: httpbin
      containers:
      - image: quay.io/gspence/nginx
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ssl
  namespace: gwapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-ssl
      version: v1
  template:
    metadata:
      labels:
        app: nginx-ssl
        version: v1
    spec:
      serviceAccountName: httpbin
      containers:
      - image: quay.io/gspence/nginx-ssl
        imagePullPolicy: Always
        name: nginx-ssl
        ports:
        - containerPort: 443
        volumeMounts:
        - name: cert
          mountPath: /etc/nginx/certs
      volumes:
      - name: cert
        secret:
          secretName: pass-credential
          items:
          - key: tls.crt
            path: server.crt
          - key: tls.key
            path: server.key
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: gateway
  namespace: gwapi
spec:
  ${GW_ADDRESSES_YAML}
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  gatewayClassName: istio
  listeners:
  - name: http
    hostname: "http.${GWAPI_DOMAIN}"
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
  - name: edge
    hostname: "edge.${GWAPI_DOMAIN}"
    port: 443
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - name: edge-credential
        group: ""
    allowedRoutes:
      namespaces:
        from: All
  - name: reencrypt
    hostname: "re.${GWAPI_DOMAIN}"
    port: 443
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - name: re-credential
        group: ""
    allowedRoutes:
      namespaces:
        from: All
  - name: passthrough
    hostname: "pass.${GWAPI_DOMAIN}"
    port: 443
    protocol: TLS
    tls:
      mode: Passthrough
    allowedRoutes:
      namespaces:
        from: All
      kinds:
      - kind: TLSRoute
  - name: http-features
    hostname: "*.hf.${GWAPI_DOMAIN}"
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: reencrypt
  namespace: gwapi
spec:
  host: nginx-reencrypt.gwapi.svc.cluster.local
  trafficPolicy:
    tls:
      mode: SIMPLE
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: http
  namespace: gwapi
spec:
  parentRefs:
  - name: gateway
    namespace: gwapi
  hostnames: ["http.${GWAPI_DOMAIN}"]
  rules:
  - backendRefs:
    - name: nginx
      port: 8000
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: edge
  namespace: gwapi
spec:
  parentRefs:
  - name: gateway
    namespace: gwapi
  hostnames: ["edge.${GWAPI_DOMAIN}"]
  rules:
  - backendRefs:
    - name: nginx
      port: 8000
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: reencrypt
  namespace: gwapi
spec:
  parentRefs:
  - name: gateway
    namespace: gwapi
  hostnames: ["re.${GWAPI_DOMAIN}"]
  rules:
  - backendRefs:
    - name: nginx-reencrypt
      port: 8443
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: passthrough
  namespace: gwapi
spec:
  parentRefs:
  - name: gateway
    namespace: gwapi
  hostnames: ["pass.${GWAPI_DOMAIN}"]
  rules:
  - backendRefs:
    - name: nginx-pass
      port: 8443
